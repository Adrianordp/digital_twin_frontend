/* tslint:disable */
/* eslint-disable */
/**
 * Dual-System Digital Twin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request payload for updating model parameters in a session.
 * 
 * Attributes:
 *     session_id (UUID): The session identifier.
 *     params (dict): Parameters to update.
 * @export
 * @interface UpdateParamsRequest
 */
export interface UpdateParamsRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateParamsRequest
     */
    sessionId: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof UpdateParamsRequest
     */
    params: { [key: string]: any; };
}

/**
 * Check if a given object implements the UpdateParamsRequest interface.
 */
export function instanceOfUpdateParamsRequest(value: object): value is UpdateParamsRequest {
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('params' in value) || value['params'] === undefined) return false;
    return true;
}

export function UpdateParamsRequestFromJSON(json: any): UpdateParamsRequest {
    return UpdateParamsRequestFromJSONTyped(json, false);
}

export function UpdateParamsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateParamsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionId': json['session_id'],
        'params': json['params'],
    };
}

export function UpdateParamsRequestToJSON(json: any): UpdateParamsRequest {
    return UpdateParamsRequestToJSONTyped(json, false);
}

export function UpdateParamsRequestToJSONTyped(value?: UpdateParamsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'session_id': value['sessionId'],
        'params': value['params'],
    };
}

